

Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 30 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 46 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 49 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 139 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 30 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 46 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 49 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 139 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 88 milisegundosNo total 102 nós foram visitados
Tivemos 328 nós gerados com repeticçoes e 103 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 375 milisegundosNo total 48 nós foram visitados
Tivemos 157 nós gerados com repeticçoes e 79 sem repetiçoes
E a taxa de ramificaçao foi de 3.27 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 569 milisegundosNo total 92 nós foram visitados
Tivemos 294 nós gerados com repeticçoes e 101 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1153 milisegundosNo total 61 nós foram visitados
Tivemos 195 nós gerados com repeticçoes e 86 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 30 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 46 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 49 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 139 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 88 milisegundosNo total 102 nós foram visitados
Tivemos 328 nós gerados com repeticçoes e 103 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 375 milisegundosNo total 48 nós foram visitados
Tivemos 157 nós gerados com repeticçoes e 79 sem repetiçoes
E a taxa de ramificaçao foi de 3.27 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 569 milisegundosNo total 92 nós foram visitados
Tivemos 294 nós gerados com repeticçoes e 101 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1153 milisegundosNo total 61 nós foram visitados
Tivemos 195 nós gerados com repeticçoes e 86 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 4 caixas
Heuristica: retorna 1O algoritmo levou 397 milisegundosNo total 365 nós foram visitados
Tivemos 1336 nós gerados com repeticçoes e 378 sem repetiçoes
E a taxa de ramificaçao foi de 3.66 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 533 milisegundosNo total 37 nós foram visitados
Tivemos 149 nós gerados com repeticçoes e 90 sem repetiçoes
E a taxa de ramificaçao foi de 4.03 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 2198 milisegundosNo total 347 nós foram visitados
Tivemos 1263 nós gerados com repeticçoes e 372 sem repetiçoes
E a taxa de ramificaçao foi de 3.64 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 3446 milisegundosNo total 111 nós foram visitados
Tivemos 395 nós gerados com repeticçoes e 187 sem repetiçoes
E a taxa de ramificaçao foi de 3.56 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 30 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 46 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 49 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 139 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 88 milisegundosNo total 102 nós foram visitados
Tivemos 328 nós gerados com repeticçoes e 103 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 375 milisegundosNo total 48 nós foram visitados
Tivemos 157 nós gerados com repeticçoes e 79 sem repetiçoes
E a taxa de ramificaçao foi de 3.27 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 569 milisegundosNo total 92 nós foram visitados
Tivemos 294 nós gerados com repeticçoes e 101 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1153 milisegundosNo total 61 nós foram visitados
Tivemos 195 nós gerados com repeticçoes e 86 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 4 caixas
Heuristica: retorna 1O algoritmo levou 397 milisegundosNo total 365 nós foram visitados
Tivemos 1336 nós gerados com repeticçoes e 378 sem repetiçoes
E a taxa de ramificaçao foi de 3.66 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 533 milisegundosNo total 37 nós foram visitados
Tivemos 149 nós gerados com repeticçoes e 90 sem repetiçoes
E a taxa de ramificaçao foi de 4.03 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 2198 milisegundosNo total 347 nós foram visitados
Tivemos 1263 nós gerados com repeticçoes e 372 sem repetiçoes
E a taxa de ramificaçao foi de 3.64 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 3446 milisegundosNo total 111 nós foram visitados
Tivemos 395 nós gerados com repeticçoes e 187 sem repetiçoes
E a taxa de ramificaçao foi de 3.56 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 5 caixas
Heuristica: retorna 1O algoritmo levou 1197 milisegundosNo total 1144 nós foram visitados
Tivemos 4224 nós gerados com repeticçoes e 1145 sem repetiçoes
E a taxa de ramificaçao foi de 3.69 filhos por nóO plano possui 15 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1'), ('box5', 'room1')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1'), ('box5', 'room1')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box2', 'room2'), ('box3', 'room1'), ('box5', 'room1')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1'), ('box5', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1'), ('box5', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box5', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box5', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'left'), ('box5', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'left'), ('box5', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box5', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box2', 'room2'), ('box1', 'room2'), ('box5', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box5', 'room2'), ('box1', 'room2'), ('box4', 'room1')}, 'free': {('left',), ('right',)}}
12: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box5', 'room2'), ('box1', 'room2'), ('box4', 'room1')}, 'free': {('left',), ('right',)}}
13: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box5', 'room2'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
14: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box5', 'room2')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
15: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box5', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 3474 milisegundosNo total 160 nós foram visitados
Tivemos 720 nós gerados com repeticçoes e 438 sem repetiçoes
E a taxa de ramificaçao foi de 4.5 filhos por nóO plano possui 15 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box5', 'room1')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box5', 'room1')}, 'carry': {('box1', 'left'), ('box2', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room2'), ('box5', 'room1')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box1', 'room2'), ('box5', 'room1')}, 'free': {('left',), ('right',)}}
12: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box1', 'room2'), ('box5', 'room1')}, 'free': {('left',), ('right',)}}
13: 	 Aplicando a açao ('pickup', ['box5', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box5', 'right')}}
14: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('left',)}, 'carry': {('box5', 'right')}}
15: 	 Aplicando a açao ('putdown', ['box5', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box5', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 9261 milisegundosNo total 1144 nós foram visitados
Tivemos 4224 nós gerados com repeticçoes e 1145 sem repetiçoes
E a taxa de ramificaçao foi de 3.69 filhos por nóO plano possui 15 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box1', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room1'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room1'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
6: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box4', 'left'), ('box1', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box4', 'left'), ('box1', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box1', 'room2'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
10: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box1', 'room2'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
11: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box4', 'room2'), ('box1', 'room2'), ('box5', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
12: 	 Aplicando a açao ('pickup', ['box5', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box5', 'right')}}
13: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box5', 'right')}}
14: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box5', 'right')}, 'free': {('left',)}}
15: 	 Aplicando a açao ('putdown', ['box5', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box5', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 32557 milisegundosNo total 841 nós foram visitados
Tivemos 3180 nós gerados com repeticçoes e 1199 sem repetiçoes
E a taxa de ramificaçao foi de 3.78 filhos por nóO plano possui 15 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box1', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box1', 'room2'), ('box2', 'room1'), ('box5', 'room1')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box5', 'room1'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box5', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box5', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1')}, 'carry': {('box5', 'left'), ('box2', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1')}, 'carry': {('box2', 'right'), ('box5', 'left')}}
10: 	 Aplicando a açao ('putdown', ['box5', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box5', 'room2')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box5', 'room2')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
12: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box5', 'room2')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
13: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box5', 'room2')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
14: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box1', 'room2'), ('box5', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
15: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2'), ('box4', 'room2'), ('box5', 'room2'), ('box1', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 38 milisegundosNo total 28 nós foram visitados
Tivemos 76 nós gerados com repeticçoes e 32 sem repetiçoes
E a taxa de ramificaçao foi de 2.71 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 56 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 20 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 91 milisegundosNo total 20 nós foram visitados
Tivemos 56 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.8 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 211 milisegundosNo total 12 nós foram visitados
Tivemos 38 nós gerados com repeticçoes e 24 sem repetiçoes
E a taxa de ramificaçao foi de 3.17 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right')}, 'box-at': {('box2', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 38 milisegundosNo total 28 nós foram visitados
Tivemos 76 nós gerados com repeticçoes e 32 sem repetiçoes
E a taxa de ramificaçao foi de 2.71 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 56 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 20 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 91 milisegundosNo total 20 nós foram visitados
Tivemos 56 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.8 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 211 milisegundosNo total 12 nós foram visitados
Tivemos 38 nós gerados com repeticçoes e 24 sem repetiçoes
E a taxa de ramificaçao foi de 3.17 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right')}, 'box-at': {('box2', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 264 milisegundosNo total 118 nós foram visitados
Tivemos 384 nós gerados com repeticçoes e 122 sem repetiçoes
E a taxa de ramificaçao foi de 3.25 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 404 milisegundosNo total 30 nós foram visitados
Tivemos 114 nós gerados com repeticçoes e 61 sem repetiçoes
E a taxa de ramificaçao foi de 3.8 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room1')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 684 milisegundosNo total 109 nós foram visitados
Tivemos 353 nós gerados com repeticçoes e 119 sem repetiçoes
E a taxa de ramificaçao foi de 3.24 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
5: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
6: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 1815 milisegundosNo total 67 nós foram visitados
Tivemos 223 nós gerados com repeticçoes e 100 sem repetiçoes
E a taxa de ramificaçao foi de 3.33 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box3', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
6: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box1', 'right'), ('box3', 'left')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box1', 'right'), ('box3', 'left')}}
8: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 38 milisegundosNo total 28 nós foram visitados
Tivemos 76 nós gerados com repeticçoes e 32 sem repetiçoes
E a taxa de ramificaçao foi de 2.71 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 56 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 20 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 91 milisegundosNo total 20 nós foram visitados
Tivemos 56 nós gerados com repeticçoes e 28 sem repetiçoes
E a taxa de ramificaçao foi de 2.8 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 211 milisegundosNo total 12 nós foram visitados
Tivemos 38 nós gerados com repeticçoes e 24 sem repetiçoes
E a taxa de ramificaçao foi de 3.17 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'right')}, 'box-at': {('box2', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 264 milisegundosNo total 118 nós foram visitados
Tivemos 384 nós gerados com repeticçoes e 122 sem repetiçoes
E a taxa de ramificaçao foi de 3.25 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 404 milisegundosNo total 30 nós foram visitados
Tivemos 114 nós gerados com repeticçoes e 61 sem repetiçoes
E a taxa de ramificaçao foi de 3.8 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room1')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 684 milisegundosNo total 109 nós foram visitados
Tivemos 353 nós gerados com repeticçoes e 119 sem repetiçoes
E a taxa de ramificaçao foi de 3.24 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
3: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
5: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
6: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
8: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 1815 milisegundosNo total 67 nós foram visitados
Tivemos 223 nós gerados com repeticçoes e 100 sem repetiçoes
E a taxa de ramificaçao foi de 3.33 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box1', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box3', 'room1')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
6: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box1', 'right'), ('box3', 'left')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2')}, 'carry': {('box1', 'right'), ('box3', 'left')}}
8: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 4 caixas
Heuristica: retorna 1O algoritmo levou 440 milisegundosNo total 403 nós foram visitados
Tivemos 1471 nós gerados com repeticçoes e 414 sem repetiçoes
E a taxa de ramificaçao foi de 3.65 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box1', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box4', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box4', 'room1'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'left'), ('box4', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'left'), ('box4', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2'), ('box2', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: soma de níveisO algoritmo levou 711 milisegundosNo total 47 nós foram visitados
Tivemos 206 nós gerados com repeticçoes e 118 sem repetiçoes
E a taxa de ramificaçao foi de 4.38 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box4', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box2', 'left'), ('box4', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box3', 'room1')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
10: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2'), ('box3', 'room2')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: nível máximoO algoritmo levou 2718 milisegundosNo total 360 nós foram visitados
Tivemos 1290 nós gerados com repeticçoes e 402 sem repetiçoes
E a taxa de ramificaçao foi de 3.58 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('left',)}, 'carry': {('box4', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box2', 'left'), ('box4', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'right'), ('box2', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1')}, 'carry': {('box4', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right'), ('box1', 'left')}}
10: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2'), ('box3', 'room2')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}

Heuristica: fast forwardO algoritmo levou 4075 milisegundosNo total 129 nós foram visitados
Tivemos 491 nós gerados com repeticçoes e 233 sem repetiçoes
E a taxa de ramificaçao foi de 3.81 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box2', 'room1'), ('box3', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box2', 'right'), ('box1', 'left')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box4', 'room1'), ('box3', 'room1')}, 'carry': {('box1', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1'), ('box3', 'room1')}, 'free': {('right',), ('left',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2')}, 'carry': {('box3', 'right'), ('box4', 'left')}}
10: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box3', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
11: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2'), ('box3', 'room2')}, 'free': {('right',), ('left',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 15 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 27 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 37 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 57 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 154 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 15 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 27 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 37 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 57 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 154 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 110 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 418 milisegundosNo total 40 nós foram visitados
Tivemos 139 nós gerados com repeticçoes e 76 sem repetiçoes
E a taxa de ramificaçao foi de 3.48 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 470 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1378 milisegundosNo total 62 nós foram visitados
Tivemos 204 nós gerados com repeticçoes e 98 sem repetiçoes
E a taxa de ramificaçao foi de 3.29 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
6: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 15 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 27 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 37 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 57 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 154 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 110 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 418 milisegundosNo total 40 nós foram visitados
Tivemos 139 nós gerados com repeticçoes e 76 sem repetiçoes
E a taxa de ramificaçao foi de 3.48 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 470 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1378 milisegundosNo total 62 nós foram visitados
Tivemos 204 nós gerados com repeticçoes e 98 sem repetiçoes
E a taxa de ramificaçao foi de 3.29 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
6: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 4 caixas
Heuristica: retorna 1O algoritmo levou 324 milisegundosNo total 321 nós foram visitados
Tivemos 1170 nós gerados com repeticçoes e 340 sem repetiçoes
E a taxa de ramificaçao foi de 3.64 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box4', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box3', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 1069 milisegundosNo total 85 nós foram visitados
Tivemos 345 nós gerados com repeticçoes e 199 sem repetiçoes
E a taxa de ramificaçao foi de 4.06 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1'), ('box4', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box4', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 1786 milisegundosNo total 305 nós foram visitados
Tivemos 1095 nós gerados com repeticçoes e 333 sem repetiçoes
E a taxa de ramificaçao foi de 3.59 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box3', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 2292 milisegundosNo total 80 nós foram visitados
Tivemos 299 nós gerados com repeticçoes e 148 sem repetiçoes
E a taxa de ramificaçao foi de 3.74 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1'), ('box2', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box4', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box4', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box4', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box4', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 2 caixas
Heuristica: retorna 1O algoritmo levou 15 milisegundosNo total 23 nós foram visitados
Tivemos 64 nós gerados com repeticçoes e 27 sem repetiçoes
E a taxa de ramificaçao foi de 2.78 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'left')}, 'box-at': {('box1', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 37 milisegundosNo total 9 nós foram visitados
Tivemos 29 nós gerados com repeticçoes e 18 sem repetiçoes
E a taxa de ramificaçao foi de 3.22 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 57 milisegundosNo total 19 nós foram visitados
Tivemos 53 nós gerados com repeticçoes e 26 sem repetiçoes
E a taxa de ramificaçao foi de 2.79 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left')}, 'box-at': {('box2', 'room2')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 154 milisegundosNo total 11 nós foram visitados
Tivemos 35 nós gerados com repeticçoes e 21 sem repetiçoes
E a taxa de ramificaçao foi de 3.18 filhos por nóO plano possui 5 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box1', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'carry': {('box2', 'right')}, 'box-at': {('box1', 'room2')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 3 caixas
Heuristica: retorna 1O algoritmo levou 110 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
9: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 418 milisegundosNo total 40 nós foram visitados
Tivemos 139 nós gerados com repeticçoes e 76 sem repetiçoes
E a taxa de ramificaçao foi de 3.48 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1')}, 'carry': {('box3', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2')}, 'carry': {('box2', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
8: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
9: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 470 milisegundosNo total 100 nós foram visitados
Tivemos 320 nós gerados com repeticçoes e 102 sem repetiçoes
E a taxa de ramificaçao foi de 3.2 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
3: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
4: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'free': {('left',), ('right',)}}
5: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
6: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2')}, 'carry': {('box2', 'left')}, 'free': {('right',)}}
9: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 1378 milisegundosNo total 62 nós foram visitados
Tivemos 204 nós gerados com repeticçoes e 98 sem repetiçoes
E a taxa de ramificaçao foi de 3.29 filhos por nóO plano possui 9 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room1')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
6: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
7: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
8: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
9: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema do robo: 4 caixas
Heuristica: retorna 1O algoritmo levou 324 milisegundosNo total 321 nós foram visitados
Tivemos 1170 nós gerados com repeticçoes e 340 sem repetiçoes
E a taxa de ramificaçao foi de 3.64 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box4', 'room1')}, 'free': {('left',)}, 'carry': {('box2', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box3', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2')}, 'free': {('right',)}, 'carry': {('box3', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box3', 'left'), ('box1', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box3', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box3', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box1', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: soma de níveisO algoritmo levou 1069 milisegundosNo total 85 nós foram visitados
Tivemos 345 nós gerados com repeticçoes e 199 sem repetiçoes
E a taxa de ramificaçao foi de 4.06 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1'), ('box4', 'room1')}, 'free': {('right',)}, 'carry': {('box1', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box2', 'room1')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1')}, 'carry': {('box4', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box2', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room1'), ('box1', 'room2'), ('box4', 'room2')}, 'free': {('right',)}, 'carry': {('box2', 'left')}}
8: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: nível máximoO algoritmo levou 1786 milisegundosNo total 305 nós foram visitados
Tivemos 1095 nós gerados com repeticçoes e 333 sem repetiçoes
E a taxa de ramificaçao foi de 3.59 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box4', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room1')}, 'free': {('right',)}, 'carry': {('box4', 'left')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1')}, 'carry': {('box4', 'left'), ('box2', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room1'), ('box2', 'room2')}, 'carry': {('box4', 'left')}, 'free': {('right',)}}
5: 	 Aplicando a açao ('putdown', ['box4', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box3', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room2'), ('box3', 'room1'), ('box4', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room2'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box2', 'room2'), ('box4', 'room2')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box3', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box2', 'room2'), ('box1', 'room2'), ('box4', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}

Heuristica: fast forwardO algoritmo levou 2292 milisegundosNo total 80 nós foram visitados
Tivemos 299 nós gerados com repeticçoes e 148 sem repetiçoes
E a taxa de ramificaçao foi de 3.74 filhos por nóO plano possui 11 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('pickup', ['box3', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box2', 'room1'), ('box4', 'room1')}, 'free': {('left',)}, 'carry': {('box3', 'right')}}
2: 	 Aplicando a açao ('pickup', ['box2', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
3: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1')}, 'carry': {('box2', 'left'), ('box3', 'right')}}
4: 	 Aplicando a açao ('putdown', ['box2', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box4', 'room1'), ('box2', 'room2')}, 'carry': {('box3', 'right')}, 'free': {('left',)}}
5: 	 Aplicando a açao ('putdown', ['box3', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box4', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
6: 	 Aplicando a açao ('move', ['room2', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box4', 'room1'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}
7: 	 Aplicando a açao ('pickup', ['box4', 'right', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box1', 'room1'), ('box3', 'room2'), ('box2', 'room2')}, 'free': {('left',)}, 'carry': {('box4', 'right')}}
8: 	 Aplicando a açao ('pickup', ['box1', 'left', 'room1']), gera-se o estado		{'robot-at': {('room1',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
9: 	 Aplicando a açao ('move', ['room1', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box1', 'left'), ('box4', 'right')}}
10: 	 Aplicando a açao ('putdown', ['box1', 'left', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box1', 'room2'), ('box3', 'room2'), ('box2', 'room2')}, 'carry': {('box4', 'right')}, 'free': {('left',)}}
11: 	 Aplicando a açao ('putdown', ['box4', 'right', 'room2']), gera-se o estado		{'robot-at': {('room2',)}, 'box-at': {('box4', 'room2'), ('box3', 'room2'), ('box1', 'room2'), ('box2', 'room2')}, 'free': {('left',), ('right',)}}


Tratando o Problema TyreWorld
Heuristica: retorna 1O algoritmo levou 4363 milisegundosNo total 1755 nós foram visitados
Tivemos 8269 nós gerados com repeticçoes e 1756 sem repetiçoes
E a taxa de ramificaçao foi de 4.71 filhos por nóO plano possui 19 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('open', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}}
2: 	 Aplicando a açao ('fetch', ['wrench', 'boot']), gera-se o estado		{'in': {('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',)}}
3: 	 Aplicando a açao ('fetch', ['pump', 'boot']), gera-se o estado		{'in': {('r1', 'boot'), ('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('pump',)}}
4: 	 Aplicando a açao ('inflate', ['r1']), gera-se o estado		{'in': {('r1', 'boot'), ('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('pump',)}, 'inflated': {('r1',)}}
5: 	 Aplicando a açao ('fetch', ['r1', 'boot']), gera-se o estado		{'in': {('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('pump',)}, 'inflated': {('r1',)}}
6: 	 Aplicando a açao ('loosen', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('pump',)}, 'inflated': {('r1',)}, 'loose': {('nuts1', 'the-hub1')}}
7: 	 Aplicando a açao ('fetch', ['jack', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('jack',), ('pump',)}, 'inflated': {('r1',)}, 'loose': {('nuts1', 'the-hub1')}}
8: 	 Aplicando a açao ('jack-up', ['the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('pump',)}, 'inflated': {('r1',)}, 'loose': {('nuts1', 'the-hub1')}, 'not-on-ground': {('the-hub1',)}}
9: 	 Aplicando a açao ('undo', ['nuts1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('nuts1',), ('pump',)}, 'inflated': {('r1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}}
10: 	 Aplicando a açao ('remove-wheel', ['w1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('w1',), ('pump',), ('nuts1',)}, 'inflated': {('r1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
11: 	 Aplicando a açao ('put-on-wheel', ['r1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',), ('pump',), ('nuts1',)}, 'inflated': {('r1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}}
12: 	 Aplicando a açao ('do-up', ['nuts1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',), ('pump',)}, 'inflated': {('r1',)}, 'not-on-ground': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}}
13: 	 Aplicando a açao ('jack-down', ['the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',), ('pump',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
14: 	 Aplicando a açao ('tighten', ['nuts1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',), ('pump',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}}
15: 	 Aplicando a açao ('put-away', ['pump', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'in': {('pump', 'boot')}}
16: 	 Aplicando a açao ('put-away', ['jack', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'in': {('jack', 'boot'), ('pump', 'boot')}}
17: 	 Aplicando a açao ('put-away', ['wrench', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('w1',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot')}}
18: 	 Aplicando a açao ('put-away', ['w1', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}}
19: 	 Aplicando a açao ('close', ['boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'inflated': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'closed': {('boot',)}}

Heuristica: soma de níveisO algoritmo levou 4534 milisegundosNo total 99 nós foram visitados
Tivemos 610 nós gerados com repeticçoes e 320 sem repetiçoes
E a taxa de ramificaçao foi de 6.16 filhos por nóO plano possui 19 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('open', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}}
2: 	 Aplicando a açao ('fetch', ['jack', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('jack',)}}
3: 	 Aplicando a açao ('fetch', ['wrench', 'boot']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',)}}
4: 	 Aplicando a açao ('loosen', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',)}, 'loose': {('nuts1', 'the-hub1')}}
5: 	 Aplicando a açao ('jack-up', ['the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',)}, 'loose': {('nuts1', 'the-hub1')}, 'not-on-ground': {('the-hub1',)}}
6: 	 Aplicando a açao ('undo', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'open': {('boot',)}, 'have': {('nuts1',), ('wrench',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}}
7: 	 Aplicando a açao ('remove-wheel', ['w1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('nuts1',), ('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
8: 	 Aplicando a açao ('fetch', ['r1', 'boot']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('r1',), ('nuts1',), ('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
9: 	 Aplicando a açao ('put-on-wheel', ['r1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('nuts1',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}}
10: 	 Aplicando a açao ('do-up', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}}
11: 	 Aplicando a açao ('jack-down', ['the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
12: 	 Aplicando a açao ('put-away', ['jack', 'boot']), gera-se o estado		{'in': {('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
13: 	 Aplicando a açao ('tighten', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}}
14: 	 Aplicando a açao ('put-away', ['wrench', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('w1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}}
15: 	 Aplicando a açao ('fetch', ['pump', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}}
16: 	 Aplicando a açao ('inflate', ['r1']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}}
17: 	 Aplicando a açao ('put-away', ['w1', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}}
18: 	 Aplicando a açao ('put-away', ['pump', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}}
19: 	 Aplicando a açao ('close', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'closed': {('boot',)}}

Heuristica: nível máximoO algoritmo levou 35390 milisegundosNo total 1620 nós foram visitados
Tivemos 7991 nós gerados com repeticçoes e 1743 sem repetiçoes
E a taxa de ramificaçao foi de 4.93 filhos por nóO plano possui 19 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('open', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}}
2: 	 Aplicando a açao ('fetch', ['wrench', 'boot']), gera-se o estado		{'in': {('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',)}}
3: 	 Aplicando a açao ('fetch', ['jack', 'boot']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',)}}
4: 	 Aplicando a açao ('loosen', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',)}, 'loose': {('nuts1', 'the-hub1')}}
5: 	 Aplicando a açao ('jack-up', ['the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('wrench',)}, 'loose': {('nuts1', 'the-hub1')}, 'not-on-ground': {('the-hub1',)}}
6: 	 Aplicando a açao ('undo', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'open': {('boot',)}, 'have': {('nuts1',), ('wrench',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}}
7: 	 Aplicando a açao ('remove-wheel', ['w1', 'the-hub1']), gera-se o estado		{'in': {('r1', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('nuts1',), ('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
8: 	 Aplicando a açao ('fetch', ['r1', 'boot']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('r1',), ('nuts1',), ('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
9: 	 Aplicando a açao ('put-on-wheel', ['r1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('nuts1',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}}
10: 	 Aplicando a açao ('do-up', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}}
11: 	 Aplicando a açao ('jack-down', ['the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
12: 	 Aplicando a açao ('fetch', ['pump', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
13: 	 Aplicando a açao ('tighten', ['nuts1', 'the-hub1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}}
14: 	 Aplicando a açao ('inflate', ['r1']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}}
15: 	 Aplicando a açao ('put-away', ['pump', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'in': {('pump', 'boot')}}
16: 	 Aplicando a açao ('put-away', ['wrench', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('jack',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'in': {('wrench', 'boot'), ('pump', 'boot')}}
17: 	 Aplicando a açao ('put-away', ['w1', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('jack',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'in': {('wrench', 'boot'), ('pump', 'boot'), ('w1', 'boot')}}
18: 	 Aplicando a açao ('put-away', ['jack', 'boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}}
19: 	 Aplicando a açao ('close', ['boot']), gera-se o estado		{'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'inflated': {('r1',)}, 'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'closed': {('boot',)}}

Heuristica: fast forwardO algoritmo levou 22582 milisegundosNo total 345 nós foram visitados
Tivemos 1851 nós gerados com repeticçoes e 656 sem repetiçoes
E a taxa de ramificaçao foi de 5.37 filhos por nóO plano possui 19 passos, os quais, a partir do estado inicial, sao:1: 	 Aplicando a açao ('open', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('r1', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}}
2: 	 Aplicando a açao ('fetch', ['r1', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',)}}
3: 	 Aplicando a açao ('fetch', ['jack', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('jack',)}}
4: 	 Aplicando a açao ('fetch', ['wrench', 'boot']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'tight': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('jack',)}}
5: 	 Aplicando a açao ('loosen', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'on-ground': {('the-hub1',)}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('jack',)}, 'loose': {('nuts1', 'the-hub1')}}
6: 	 Aplicando a açao ('jack-up', ['the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',)}, 'loose': {('nuts1', 'the-hub1')}, 'not-on-ground': {('the-hub1',)}}
7: 	 Aplicando a açao ('undo', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'on': {('w1', 'the-hub1')}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('nuts1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}}
8: 	 Aplicando a açao ('remove-wheel', ['w1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('r1',), ('wrench',), ('nuts1',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'free': {('the-hub1',)}}
9: 	 Aplicando a açao ('put-on-wheel', ['r1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('nuts1',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'unfastened': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}}
10: 	 Aplicando a açao ('do-up', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'not-on-ground': {('the-hub1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}}
11: 	 Aplicando a açao ('jack-down', ['the-hub1']), gera-se o estado		{'in': {('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('jack',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
12: 	 Aplicando a açao ('put-away', ['jack', 'boot']), gera-se o estado		{'in': {('jack', 'boot'), ('pump', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
13: 	 Aplicando a açao ('fetch', ['pump', 'boot']), gera-se o estado		{'in': {('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'not-inflated': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}}
14: 	 Aplicando a açao ('inflate', ['r1']), gera-se o estado		{'in': {('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'loose': {('nuts1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}}
15: 	 Aplicando a açao ('tighten', ['nuts1', 'the-hub1']), gera-se o estado		{'in': {('jack', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('w1',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}, 'tight': {('nuts1', 'the-hub1')}}
16: 	 Aplicando a açao ('put-away', ['w1', 'boot']), gera-se o estado		{'in': {('jack', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',), ('pump',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}, 'tight': {('nuts1', 'the-hub1')}}
17: 	 Aplicando a açao ('put-away', ['pump', 'boot']), gera-se o estado		{'in': {('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'have': {('wrench',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}, 'tight': {('nuts1', 'the-hub1')}}
18: 	 Aplicando a açao ('put-away', ['wrench', 'boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'open': {('boot',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}, 'tight': {('nuts1', 'the-hub1')}}
19: 	 Aplicando a açao ('close', ['boot']), gera-se o estado		{'in': {('wrench', 'boot'), ('jack', 'boot'), ('pump', 'boot'), ('w1', 'boot')}, 'unlocked': {('boot',)}, 'intact': {('r1',)}, 'on': {('r1', 'the-hub1')}, 'fastened': {('the-hub1',)}, 'on-ground': {('the-hub1',)}, 'inflated': {('r1',)}, 'tight': {('nuts1', 'the-hub1')}, 'closed': {('boot',)}}
